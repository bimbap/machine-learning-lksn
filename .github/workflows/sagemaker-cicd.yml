name: SageMaker Notebook CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'machine_learning/training.ipynb'
      - 'requirements.txt'
      - 'machine_learning/script/on-start.sh'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install unzip and AWS CLI
      run: |
        set -e
        sudo apt-get update
        sudo apt-get install -y unzip curl
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -q awscliv2.zip
        sudo ./aws/install
        aws --version

    - name: Verify AWS Credentials
      run: |
        set -e
        aws sts get-caller-identity
        aws sagemaker list-notebook-instances --max-items 5

    - name: Deploy Lifecycle Configuration
      run: |
        set -e
        SCRIPT_PATH="machine_learning/script/on-start.sh"
        CONFIG_NAME="notebook-config-$(date +%Y%m%d%H%M%S)"

        echo "::group::Find SageMaker Notebook Instance"
        INSTANCE_NAME=$(aws sagemaker list-notebook-instances \
          --status-equals InService \
          --query "NotebookInstances[0].NotebookInstanceName" \
          --output text)
        echo "Notebook Instance: $INSTANCE_NAME"
        echo "::endgroup::"

        if [ -z "$INSTANCE_NAME" ] || [ "$INSTANCE_NAME" = "None" ]; then
          echo "::error::No active SageMaker notebook instance found"
          exit 1
        fi

        cp "$SCRIPT_PATH" lifecycle_script.sh
        chmod +x lifecycle_script.sh

        echo "::group::Create Lifecycle Config"
        LIFECYCLE_SCRIPT=$(base64 -w 0 lifecycle_script.sh)
        aws sagemaker create-notebook-instance-lifecycle-config \
          --notebook-instance-lifecycle-config-name "$CONFIG_NAME" \
          --on-start Content="$LIFECYCLE_SCRIPT"
        echo "::endgroup::"

        echo "::group::Attach Lifecycle Config to Notebook"
        aws sagemaker update-notebook-instance \
          --notebook-instance-name "$INSTANCE_NAME" \
          --lifecycle-config-name "$CONFIG_NAME"
        echo "::endgroup::"

        echo "::group::Restart Notebook Instance"
        aws sagemaker stop-notebook-instance --notebook-instance-name "$INSTANCE_NAME"
        while [ "$(aws sagemaker describe-notebook-instance \
          --notebook-instance-name "$INSTANCE_NAME" \
          --query "NotebookInstanceStatus" --output text)" != "Stopped" ]; do
          echo "Waiting for notebook to stop..."
          sleep 5
        done

        aws sagemaker start-notebook-instance --notebook-instance-name "$INSTANCE_NAME"
        echo "::endgroup::"

        echo "::notice::Notebook instance updated with lifecycle configuration successfully"
