name: SageMaker Notebook CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'machine_learning/training.ipynb'
      - 'requirements.txt'
      - 'machine_learning/script/on-start.sh'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Debug Info
      run: |
        echo "Workflow triggered!"
        echo "Event name: ${{ github.event_name }}"
        echo "Branch: ${{ github.ref }}"
        git diff --name-only HEAD^ HEAD || echo "No previous commit to compare"

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install unzip
      run: sudo apt-get update && sudo apt install -y unzip
    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

    - name: Test AWS Connection
      run: |
        aws sts get-caller-identity
        aws sagemaker list-notebook-instances --max-items 1

    - name: Deploy to SageMaker Notebook
      run: |
        SCRIPT_PATH="machine_learning/script/on-start.sh"
        CONFIG_NAME="notebook-config-$(date +%Y%m%d%H%M%S)"

        INSTANCE_NAME=$(aws sagemaker list-notebook-instances \
          --status-equals InService \
          --query "NotebookInstances[0].NotebookInstanceName" \
          --output text)
        if [ -z "$INSTANCE_NAME" ] || [ "$INSTANCE_NAME" = "None" ]; then
          echo "::error::No active SageMaker notebook instance found"
          exit 1
        fi

        cp "$SCRIPT_PATH" lifecycle_script.sh
        chmod +x lifecycle_script.sh

        LIFECYCLE_SCRIPT=$(base64 -w 0 lifecycle_script.sh)

        aws sagemaker create-notebook-instance-lifecycle-config \
          --notebook-instance-lifecycle-config-name "$CONFIG_NAME" \
          --on-start Content="$LIFECYCLE_SCRIPT"

        aws sagemaker update-notebook-instance \
          --notebook-instance-name "$INSTANCE_NAME" \
          --lifecycle-config-name "$CONFIG_NAME"

        aws sagemaker stop-notebook-instance --notebook-instance-name "$INSTANCE_NAME"
        while [ "$(aws sagemaker describe-notebook-instance \
          --notebook-instance-name "$INSTANCE_NAME" \
          --query "NotebookInstanceStatus" \
          --output text)" != "Stopped" ]; do
          sleep 5
        done
        aws sagemaker start-notebook-instance --notebook-instance-name "$INSTANCE_NAME"

        echo "::notice::Notebook instance update initiated successfully"
        echo "::notice::Instance ARN: $(aws sagemaker describe-notebook-instance \
          --notebook-instance-name "$INSTANCE_NAME" \
          --query "NotebookInstanceArn" \
          --output text)"
